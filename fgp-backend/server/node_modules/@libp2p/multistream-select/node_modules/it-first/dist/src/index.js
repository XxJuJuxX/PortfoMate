function isAsyncIterable(thing) {
    return thing[Symbol.asyncIterator] != null;
}
function first(source) {
    if (isAsyncIterable(source)) {
        return (async () => {
            for await (const entry of source) { // eslint-disable-line no-unreachable-loop
                return entry;
            }
            return undefined;
        })();
    }
    for (const entry of source) { // eslint-disable-line no-unreachable-loop
        return entry;
    }
    return undefined;
}
export default first;
//# sourceMappingURL=index.js.map